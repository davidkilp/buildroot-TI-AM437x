From d915f805d280baa9bd13cc20849e8157ab457303 Mon Sep 17 00:00:00 2001
From: David Kilp <David.Kilp@crossmatch.com>
Date: Tue, 9 Oct 2018 16:36:17 -0400
Subject: [PATCH 12/18] For Crossmatch Nomad (codename Quake) devices the
 FAP-60 sensor needs a different clock output using the clock output
 visibility pin.

---
 drivers/clk/imx/clk-imx6q.c | 53 +++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 53 insertions(+)

diff --git a/drivers/clk/imx/clk-imx6q.c b/drivers/clk/imx/clk-imx6q.c
index 6f5d683..ccb57e53 100644
--- a/drivers/clk/imx/clk-imx6q.c
+++ b/drivers/clk/imx/clk-imx6q.c
@@ -1007,12 +1007,65 @@ static void __init imx6q_clocks_init(struct device_node *ccm_node)
 		}
 	}
 
+#ifdef CONFIG_CROSSMATCH_QUAKE
+
+#ifdef CONFIG_MXC_FAP60_ASIC2_REVISION
+	/* 
+	 * On Cross Match Quake/Groot boards we need to drive sensor with CLKO(2),
+	 * the clock output visibility pin. 
+	 * 
+	 * Audio is driven by separate 24 MHz compared to SabreSD board default.
+	 * 
+	 * The FAP-60 ASIC2 requires a 14 MHz clock input. Actually the
+	 * spec says 13 to 15 MHz with 14 MHz typical.
+	 * 
+	 * We can't hit that exactly but if but we can come close 
+	 * using 2 different clocks:
+	 * 
+	 * Using CCM_CLK01 driving the CLKO pin and using the "ipg"
+	 * clock (@ 66 MHz) as parent we can divide that by 5 and get
+	 * 13.2 MHz which does work.
+	 * 
+	 * Using CCM_CLK02 driving the CLK0 pin and using the 
+	 * "spdif0_clk_0" @ 28.421052 MHz as parent we can divide that
+	 * by 2 to get 14.210526 MHz.
+	 * 
+	 * This is the route chosen.
+	 * 
+	 * NOTE that you need to request a value HIGHER than the divided
+	 * final output because the value is rounded to the closest available
+	 * output. Hence to get 14.2xxx we need to request something higher
+	 * so we choose 14.5 MHz but will end up with 14.2 MHz out.
+	 *  
+	 */
+	imx_clk_set_parent(clk[IMX6QDL_CLK_CKO2_SEL], clk[IMX6QDL_CLK_SPDIF]);
+	imx_clk_set_rate(clk[IMX6QDL_CLK_CKO2_SEL], 14500000);
+	imx_clk_set_parent(clk[IMX6QDL_CLK_CKO], clk[IMX6QDL_CLK_CKO2]);
+#else
+	/* 
+	 * Camera uses CLKO(1), the clock output visibility pin. 
+	 * 
+	 * In order to generate 30, 40, or 48 MHz on the CLKO ouput pin, we need to pick
+	 * a clock parent that allows generating this output (w/ a divider)
+	 * Currently, the only thing that will work is pll3 (@480000000) which on
+	 * driving the output has a constant divide/2 (see MX6 ref manual on the
+	 * CCM_CCOSR register) combined with divide by 5, 6, or 8 to get:
+	 * so  480,000,000/2/5 = 48 MHz
+	 * and 480,000,000/2/6 = 40 MHz
+	 * and 480,000,000/2/8 = 30 MHz
+	 * */
+	imx_clk_set_parent(clk[IMX6QDL_CLK_CKO1_SEL], clk[IMX6QDL_CLK_PLL3_USB_OTG]);
+	//imx_clk_set_rate(clk[IMX6QDL_CLK_CKO1_SEL], 48000000);
+	imx_clk_set_parent(clk[IMX6QDL_CLK_CKO], clk[IMX6QDL_CLK_CKO1_SEL]);
+#endif /* CONFIG_MXC_FAP60_ASIC2_REVISION */
+#else
 	/*
 	 * Let's initially set up CLKO with OSC24M, since this configuration
 	 * is widely used by imx6q board designs to clock audio codec.
 	 */
 	imx_clk_set_parent(clk[IMX6QDL_CLK_CKO2_SEL], clk[IMX6QDL_CLK_OSC]);
 	imx_clk_set_parent(clk[IMX6QDL_CLK_CKO], clk[IMX6QDL_CLK_CKO2]);
+#endif	/* CONFIG_CROSSMATCH_QUAKE */
 
 	/* Audio-related clocks configuration */
 	clk_set_parent(clk[IMX6QDL_CLK_SPDIF_SEL], clk[IMX6QDL_CLK_PLL3_PFD3_454M]);
-- 
2.9.5

